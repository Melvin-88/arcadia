version: '3'

services:
  backoffice_fe:
    build:
      context: ./arcadia.backoffice.fe
      args:
        API_HOST: https://api.arcadia.com
    container_name: arcadia_backoffice_fe
    restart: always
    ports:
      - 8079:80
    networks:
      - arcadia

  client_fe:
    build:
      context: ./arcadia.client.fe
      args:
        API_HOST: http://localhost:8078/api/v1
    container_name: arcadia_client_fe
    restart: always
    ports:
      - 8077:80
    networks:
      - arcadia
      - ingress

  socketio_haproxy:
    image: haproxy:2.1.3-alpine
    container_name: arcadia_socketio_haproxy
    restart: always
    ports:
      - '8076:80'
    volumes:
      - ./arcadia.client.socketio.haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - client_socketio_node_1
      - client_socketio_node_2
      - client_socketio_node_3
    networks:
      - arcadia
      - ingress

  client_api_haproxy:
    image: haproxy:2.1.3-alpine
    container_name: arcadia_client_api_haproxy
    restart: always
    ports:
      - '8078:80'
    volumes:
      - ./arcadia.client.api.haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - client_api_1
      - client_api_2
    networks:
      - arcadia
      - ingress

  redis:
    image: 'bitnami/redis:latest'
    hostname: redis
    environment:
      - REDIS_REPLICATION_MODE=master
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - arcadia
    ports:
      - '6379:6379'

  redis-slave:
    image: 'bitnami/redis:latest'
    hostname: redis-slave
    environment:
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=redis
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379'
    depends_on:
      - redis
    networks:
      - arcadia

  redis-sentinel:
    image: 'bitnami/redis-sentinel:latest'
    hostname: redis-sentinel
    environment:
      - REDIS_MASTER_HOST=redis
      - REDIS_MASTER_SET=arcadia
      - ALLOW_EMPTY_PASSWORD=yes
    depends_on:
      - redis
      - redis-slave
    ports:
      - '26379-26381:26379'
    networks:
      - arcadia

  client_api_1:
    build: ./arcadia.client.api
    user: node
    container_name: arcadia_client_api_1
    restart: always
    hostname: client-api-1
    environment:
      - NODE_ENV=develop
      - DB_HOST=mysql
      - PORT=3000
      - DB_PORT=3306
      - DB_USER=api_user
      - DB_PSW=132
      - DB_NAME=api
      - DB_LOGS=query,error
      - DB_CONNECTION_LIMIT=200
      - DB_RETRY_ATTEMPTS=100000
      - DB_MAX_QUERY_EXECUTION_TIME=100
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - API_VERSION=1
      - CORE_HOST=game-core-api-1
    volumes:
      - ./arcadia.client.api/src:/home/node/app/src
    depends_on:
      - mysql
      - redis
    networks:
      arcadia:
        aliases:
          - client-api-1

  client_api_2:
    build: ./arcadia.client.api
    user: node
    container_name: arcadia_client_api_2
    restart: always
    hostname: client-api-2
    environment:
      - NODE_ENV=develop
      - DB_HOST=mysql
      - PORT=3000
      - DB_PORT=3306
      - DB_USER=api_user
      - DB_PSW=132
      - DB_NAME=api
      - DB_LOGS=query,error
      - DB_CONNECTION_LIMIT=200
      - DB_RETRY_ATTEMPTS=100000
      - DB_MAX_QUERY_EXECUTION_TIME=100
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - API_VERSION=1
      - CORE_HOST=game-core-api-1
    volumes:
      - ./arcadia.client.api/src:/home/node/app/src
    depends_on:
      - mysql
      - redis
    networks:
      arcadia:
        aliases:
          - client-api-2

  game_core_api_1:
    build:
      context: ./
      dockerfile: ./arcadia.game.core.api/Dockerfile
    user: node
    container_name: arcadia_game_core_api_1
    restart: always
    hostname: game-core-api-1
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DB_SLAVE_PORT=3306
      - DB_SLAVE_USER=game-api-user
      - DB_SLAVE_PSW=W7vfrgLWE;3&]v~[
      - DB_MASTER_PORT=3306
      - DB_MASTER_NAME=game-api
      - DB_LOGS=query,error
      - DB_CONNECTION_LIMIT=200
      - DB_RETRY_ATTEMPTS=100000
      - DB_MAX_QUERY_EXECUTION_TIME=100
      - DB_MASTER_HOST=mysql
      - DB_SLAVE_HOST=mysql
      - DB_MASTER_USER=game-api-user
      - DB_MASTER_PSW=W7vfrgLWE;3&]v~[
      - DB_SLAVE_NAME=game-api
      - REDIS_HOST=redis-sentinel
      - REDIS_PORT=26379
      - API_VERSION=1
      - RABBITMQ_HOST=["rabbitmq","rabbitmq-2","rabbitmq-3"]
      - RABBITMQ_USERNAME=admin
      - RABBITMQ_PASSWORD=admin
      - GOOGLE_APPLICATION_CREDENTIALS=../studio-integration-270607-50115ca46662.json
      - USE_GCP_SM=false
      - GCP_PROJECT=projects/1076530206412
      - OPERATOR_SERVICE_API_URL=localhost
      - CLIENT_IO_HAPROXY_URL=localhost
      - ROBOTS_AUTH_SECRET=arcadia-robots-secret-1
      - CAMERA_API_URL=123
      - CAMERA_API_USER=1234
      - CAMERA_API_PASSWORD=1234
      - BLUE_RIBBON_API_URL=localhost
      - BLUE_RIBBON_AUTHENTICATION_KEY=12234
      - BLUE_RIBBON_AUTHENTICATION_SECRET=123321
      - RNG_HOST=localhost
      - EXTERNAL_REDIS_HOST=localhost
      - EXTERNAL_RABBITMQ_HOST=localhost
      - STREAM_AUTH_SECRET=1234
      - STREAM_AUTH_TEST_TOKEN_OK=12
      - STREAM_AUTH_TEST_TOKEN_BAD=13
      - GC_CURRENCY_WHITELIST=USD
      - ROBOT_OFFLINE_DURATION_THRESHOLD_SEC=5
      - SPINOMENAL_SECRET_KEY_STAGE=1
      - CLIENT_FE_BASE_URL=http://test
      - URL_CREATOR_IP_WHITELIST=127.0.0.1
      - SENTINEL_NAME=arcadia
    depends_on:
      - mysql
      - redis
      - rabbitmq_1
    networks:
      arcadia:
        aliases:
          - game-core-api-1

  client_socketio_node_1:
    build: ./arcadia.client.socketio.node
    user: node
    container_name: arcadia_client_socketio_node_1
    restart: always
    hostname: client-socketio-node-1
    environment:
      - NODE_ENV=develop
      - GAME_CORE_API_URL=http://game-core-api-1:3000
    volumes:
      - ./arcadia.client.socketio.node/src:/app/src
    depends_on:
      - redis
    networks:
      arcadia:
        aliases:
          - client-socketio-node-1

  client_socketio_node_2:
    build: ./arcadia.client.socketio.node
    user: node
    container_name: arcadia_client_socketio_node_2
    restart: always
    hostname: client-socketio-node-2
    environment:
      - NODE_ENV=develop
      - GAME_CORE_API_URL=http://game-core-api-1:3000
    volumes:
      - ./arcadia.client.socketio.node/src:/app/src
    depends_on:
      - redis
    networks:
      arcadia:
        aliases:
          - client-socketio-node-2

  client_socketio_node_3:
    build: ./arcadia.client.socketio.node
    user: node
    container_name: arcadia_client_socketio_node_3
    restart: always
    hostname: client-socketio-node-3
    environment:
      - NODE_ENV=develop
      - GAME_CORE_API_URL=http://game-core-api-1:3000
    volumes:
      - ./arcadia.client.socketio.node/src:/app/src
    depends_on:
      - redis
    networks:
      arcadia:
        aliases:
          - client-socketio-node-3

  chip_distributor:
    build:
      context: ./
      dockerfile: ./arcadia.backoffice.api/DockerfileCD
    container_name: aarcadia.chip.distributor
    restart: always
    hostname: game-chip-destributor
    volumes:
      - chips:/storage
    environment:
      - NODE_ENV=develop
      - PORT=3000
      - API_VERSION=1
      - DB_SLAVE_PORT=3306
      - DB_SLAVE_USER=game-api-user
      - DB_SLAVE_PSW=W7vfrgLWE;3&]v~[
      - DB_MASTER_PORT=3306
      - DB_MASTER_NAME=game-api
      - DB_LOGS=query,error
      - DB_CONNECTION_LIMIT=200
      - DB_RETRY_ATTEMPTS=100000
      - DB_MAX_QUERY_EXECUTION_TIME=100
      - DB_MASTER_HOST=mysql
      - DB_SLAVE_HOST=mysql
      - DB_MASTER_USER=game-api-user
      - DB_MASTER_PSW=W7vfrgLWE;3&]v~[
      - DB_SLAVE_NAME=game-api
      - ROBOT_DEMO_CHIP_PATH=/storage
    depends_on:
      - mysql
    ports:
      - '3000:3000'
    networks:
      arcadia:
        aliases:
          - game-chip-destributor

  robot_emulator_1:
    build:
      context: ./arcadia.robot.emulator
    container_name: arcadia_robot_emulator_1
    restart: always
    volumes:
      - chips:/storage
    environment:
      - SERIAL=demo_serial_1
      - ROBOT_DEMO_MODE=true
      - GAME_CORE_API_HOST=http://game-core-api-1:3000/api/v1
      - CHIP_DISTRIBUTOR_HOST=http://game-chip-destributor:3000
      - CHIP_STORAGE_PATH=/storage
    depends_on:
      - redis
      - rabbitmq_1
      - chip_distributor
    networks:
      - arcadia

  ewallet_emu_1:
    build: ./arcadia.ewallet.emu
    container_name: arcadia_ewallet_emu_1
    restart: always
    hostname: ewallet-emu-1
    environment:
      - API_PORT=3000
      - NODE_ENV=develop
    volumes:
      - ./arcadia.ewallet.emu:/app
    networks:
      - arcadia

  mysql:
    image: mysql:8.0.21
    command: --default-authentication-plugin=mysql_native_password
    container_name: arcadia_dev_mysql
    hostname: mysql
    volumes:
      - dbdata:/var/lib/mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=wWUMQUwcXd8p/M(f
      - MYSQL_DATABASE=game-api
      - MYSQL_USER=game-api-user
      - MYSQL_PASSWORD=W7vfrgLWE;3&]v~[
    ports:
      - '3306:3306'
    networks:
      ingress:
      arcadia:
        aliases:
          - mysql

  mongodb:
    container_name: arcadia_mongo_db
    image: mongo:4.2
    hostname: mongo
    restart: always
    ports:
      - '27017:27017'
    environment:
      - MONGO_SERVER_PORT=27017
      - MONGO_INITDB_ROOT_USERNAME=monitoring
      - MONGO_INITDB_ROOT_PASSWORD=12345
      - MONGO_INITDB_DATABASE=action-logs
    volumes:
      - mongo-data:/var/lib/mongo/data
    networks:
      ingress:
      arcadia:
        aliases:
          - mongo

  rabbitmq_1:
    image: bitnami/rabbitmq:3.7.17
    container_name: arcadia_rabbitmq_1
    restart: always
    hostname: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      - RABBITMQ_NODE_NAME=rabbit@rabbitmq
      - RABBITMQ_ERL_COOKIE=s3cr3tc00ki3
      - RABBITMQ_USERNAME=arcadia_admin
      - RABBITMQ_PASSWORD=AB2WpJdqZ9RRrWH
    volumes:
      - rabbitmq_data:/bitnami
    networks:
      ingress:
      arcadia:
        aliases:
          - rabbitmq
  rabbitmq_2:
    image: bitnami/rabbitmq:3.7.17
    container_name: arcadia_rabbitmq_2
    restart: always
    hostname: rabbitmq-2
    ports:
      - '5673:5672'
      - '15673:15672'
    environment:
      - RABBITMQ_NODE_NAME=rabbit@rabbitmq-2
      - RABBITMQ_NODE_TYPE=queue-ram
      - RABBITMQ_CLUSTER_NODE_NAME=rabbit@rabbitmq
      - RABBITMQ_ERL_COOKIE=s3cr3tc00ki3
      - RABBITMQ_USERNAME=arcadia_admin
      - RABBITMQ_PASSWORD=AB2WpJdqZ9RRrWH
    volumes:
      - rabbitmq_data2:/bitnami
    networks:
      ingress:
      arcadia:
        aliases:
          - rabbitmq-2
  rabbitmq_3:
    image: bitnami/rabbitmq:3.7.17
    container_name: arcadia_rabbitmq_3
    restart: always
    hostname: rabbitmq-3
    ports:
      - '5674:5672'
      - '15674:15672'
    environment:
      - RABBITMQ_NODE_NAME=rabbit@rabbitmq-3
      - RABBITMQ_NODE_TYPE=queue-ram
      - RABBITMQ_CLUSTER_NODE_NAME=rabbit@rabbitmq
      - RABBITMQ_ERL_COOKIE=s3cr3tc00ki3
      - RABBITMQ_USERNAME=arcadia_admin
      - RABBITMQ_PASSWORD=AB2WpJdqZ9RRrWH
    volumes:
      - rabbitmq_data3:/bitnami
    networks:
      ingress:
      arcadia:
        aliases:
          - rabbitmq-3

  operator_emu_1:
    image: kyma/docker-nginx
    volumes:
      - ./arcadia.operator.emu/www:/var/www
    ports:
      - '8075:80'
    networks:
      - ingress

  operator_factory_1:
    build:
      context: ./
      dockerfile: ./arcadia.operator.factory/Dockerfile
    user: node
    container_name: arcadia_operator_factory_1
    restart: always
    hostname: operator-factory-1
    ports:
      - '3005:3005'
    environment:
      - NODE_ENV=development
      - PORT=3005
      - ACTIVE_OPERATORS=1,spinomenal
      - TEST_OPERATOR_BASE_URL=http://localhost
      - TEST_OPERATOR_SECRET_KEY=asdfasdf
      - SPINOMENAL_BASE_URL=http://localhost
      - SPINOMENAL_SECRET_KEY=fasdfasdf
      - SPINOMENAL_PROVIDER_CODE=fghdfjfghj
      - SPINOMENAL_GAME_CODE=fghghjfghj
      - SPINOMENAL_PARTNER_ID=gjqweriou
    volumes:
      - ./arcadia.operator.factory/dist:/home/node/app/dist
    networks:
      - arcadia

networks:
  arcadia:
  ingress:

volumes:
  rabbitmq_data:
    driver: local
  rabbitmq_data2:
    driver: local
  rabbitmq_data3:
    driver: local
  dbdata:
    driver: local
  mongo-data:
    driver: local
  chips:
    driver: local
